$hu-bg-color-modules: (base, hocus, group-hover, group-state, state) !default;

$hu-bg-color-types: $hu-colors !default;

// bg-color -> background-color
@each $module in hu-format-modules($hu-bg-color-modules) {
  @each $hue, $colors in $hu-bg-color-types {
    @each $scale, $value in $colors {
      $class-name: hu-class-name(bg-color-#{$hue}-#{$scale});
      $property: background-color;

      @if ($module == base) {
        @include hu-base($class-name) {
          #{$property}: $value;
        }
      }

      @if ($module == state) {
        @include hu-state($class-name) {
          #{$property}: $value;
        }
      }

      @if ($module == hocus) {
        @include hu-hocus($class-name) {
          #{$property}: $value;
        }
      }

      @if ($module == group-state) {
        @include hu-group-state($class-name) {
          #{$property}: $value;
        }
      }

      @if ($module == group-hover) {
        @include hu-group-hover($class-name) {
          #{$property}: $value;
        }
      }

      @if ($module == responsive) {
        @include hu-responsive($class-name) {
          #{$property}: $value;
        }

        @if (index($hu-bg-color-modules, state)) {
          @include hu-responsive-state($class-name) {
            #{$property}: $value;
          }
        }

        @if (index($hu-bg-color-modules, group-state)) {
          @include hu-responsive-group-state($class-name) {
            #{$property}: $value;
          }
        }
      }

      @if ($module == print) {
        @include hu-print($class-name) {
          #{$property}: $value;
        }
      }
    }
  }
}