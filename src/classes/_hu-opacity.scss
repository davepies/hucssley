$hu-opacity-modules: (base);

$hu-opacity-types: (
  0: 0,
  10: 0.1,
  20: 0.2,
  25: 0.25,
  30: 0.3,
  40: 0.4,
  50: 0.5,
  60: 0.6,
  70: 0.7,
  75: 0.75,
  80: 0.8,
  90: 0.9,
  100: 1,
) !default;

@each $type, $value in $hu-opacity-types {
  $class-name: #{$hu-namespace}opacity-#{$type};
  $property: opacity;
  $value: if($value, $value, $type);

  @if (index($hu-opacity-modules, base)) {
    @include hu-base($class-name) {
      #{$property}: $value;
    }
  }

  @if (index($hu-opacity-modules, state)) {
    @include hu-state($class-name) {
      #{$property}: $value;
    }
  }

  @if (index($hu-opacity-modules, hocus)) {
    @include hu-hocus($class-name) {
      #{$property}: $value;
    }
  }

  @if (index($hu-opacity-modules, group-state)) {
    @include hu-group-state($class-name) {
      #{$property}: $value;
    }
  }

  @if (index($hu-opacity-modules, group-hover)) {
    @include hu-group-hover($class-name) {
      #{$property}: $value;
    }
  }

  @if (index($hu-opacity-modules, responsive)) {
    @include hu-responsive($class-name) {
      #{$property}: $value;
    }

    @if (index($hu-opacity-modules, state)) {
      @include hu-responsive-state($class-name) {
        #{$property}: $value;
      }
    }

    @if (index($hu-opacity-modules, group-state)) {
      @include hu-responsive-group-state($class-name) {
        #{$property}: $value;
      }
    }
  }

  @if (index($hu-opacity-modules, print)) {
    @include hu-print($class-name) {
      #{$property}: $value;
    }
  }
}