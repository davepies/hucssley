$hu-truncate-text-modules: (base, group-state, state) !default;

$hu-truncate-text-types: (
  truncate-text-off: (
    overflow: visible,
    text-overflow: initial,
    white-space: wrap
  ),
  truncate-text-on: (
    overflow: hidden,
    text-overflow: ellipsis,
    white-space: nowrap
  ),
) !default;

@each $type, $properties in $hu-truncate-text-types {
  $class-name: #{$hu-namespace}#{$type};
  
  @if (index($hu-truncate-text-modules, base)) {
    @include hu-base($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  }
  
  @if (index($hu-truncate-text-modules, state)) {
    @include hu-state($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  }
  
  @if (index($hu-truncate-text-modules, hocus)) {
    @include hu-hocus($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  }
  
  @if (index($hu-truncate-text-modules, group-state)) {
    @include hu-group-state($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  }
  
  @if (index($hu-truncate-text-modules, group-hover)) {
    @include hu-group-hover($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  }
  
  @if (index($hu-truncate-text-modules, responsive)) {
    @include hu-responsive($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  
    @if (index($hu-truncate-text-modules, state)) {
      @include hu-responsive-state($class-name) {
        @each $property, $value in $properties {
          #{$property}: $value;
        }
      }
    }
  
    @if (index($hu-truncate-text-modules, group-state)) {
      @include hu-responsive-group-state($class-name) {
        @each $property, $value in $properties {
          #{$property}: $value;
        }
      }
    }
  }
  
  @if (index($hu-truncate-text-modules, staprint)) {
    @include hu-print($class-name) {
      @each $property, $value in $properties {
        #{$property}: $value;
      }
    }
  }
}