@mixin hu-generic($class-name, $modules) {
  $modules: hu-format-modules($modules);

  @each $module in $modules {
    @if ($module == base) {
      .#{$class-name} {
        @content;
      }
    }

    @else if ($module == focus) {
      #{$hu-focus-parent} .focus--#{$class-name}#{$hu-focus-pseudo} {
        @content;
      }
    }

    @else if ($module == hover) {
      .hover--#{$class-name}:hover {
        @content;
      }
    }

    @else if ($module == hocus) {
      #{$hu-focus-parent} .hocus--#{$class-name}#{$hu-focus-pseudo},
      .hocus--#{$class-name}:hover {
        @content;
      }
    }

    @else if ($module == state) {
      @each $state in $hu-states {
        .#{$state}.#{$state}--#{$class-name} {
          @content;
        }
      }
    }

    @else if ($module == group-hover) {
      .group:hover .group__hover--#{$class-name} {
        @content;
      }
    }

    @else if ($module == group-state) {
      @each $state in $hu-states {
        .group.#{$state} .group__#{$state}--#{$class-name} {
          @content;
        }
      }
    }

    @else if ($module == reduced-motion) {
      @media (prefers-reduced-motion: reduce) {
        .reduced-motion--#{$class-name} {
          @include hu-bump-specificity {
            @content;
          }
        }
      }
    }

    @else if ($module == print) {
      @media print {
        .#{hu-escape-class-name("@print")}--#{$class-name} {
          @include hu-bump-specificity {
            @content;
          }
        }
      }
    }
  }
}